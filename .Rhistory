corr <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr.csv')
rcor <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr_r.csv')
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
View(rcor)
View(corr0)
View(corr0)
View(corr0)
plot(x=corr0$aucs,y=corr0$chg)
plot(x=corr0$chg,y=corr0$aucs)
View(corr0)
plot(x=corr0$chg,y=corr0$aucs)
plot(x=corr0$chg,y=corr0$aucs,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
corr <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr.csv')
rcor <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr_r.csv')
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
plot(x=corr0$chg,y=corr0$aucs,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
View(corr0)
plot(x=corr0$CHG,y=corr0$aucs,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
View(corr0)
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
View(corr0)
View(rcor)
corr <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr.csv')
rcor <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr_r.csv')
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
View(corr0)
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
?plot
??loess
lines(lowess(x=corr0$aucs,y=corr0$CHG),col=2)
?lowess
loess(CHG~aucs,corr0,span=1,degree=1),col=2)
loess(CHG~aucs,corr0,span=1,degree=1)
line(loess(CHG~aucs,corr0,span=1,degree=1),col=2)
lines(loess(CHG~aucs,corr0,span=1,degree=1),col=2)
lines(loess(CHG~aucs,corr0,span=1,degree=1),col=3)
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
lines(loess(CHG~aucs,corr0,span=1,degree=1),col=3)
??weights
lines(loess(CHG~aucs,corr0,span=1,degree=1,method="loess"),col=3)
??LOESS
loess(CHG~aucs,corr0,span=1,degree=1,method="loess")
lines(loess(CHG~aucs,corr0,span=1,degree=1,method="loess"),col=4)
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
lines(predict(loess(CHG~aucs,corr0,span=1,degree=1,method="loess"),se=TRUE))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1,method="loess"),se=TRUE)
fix(pl)
View(corr0)
View(corr0)
View(corr0)
View(corr0)
lines(x=corr0$aucs,y=pl$fit,col=1,lty=2);
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104")
lines(x=corr0$aucs,y=pl$fit,col=2,lty=1);
fix(pl)
fix(pl)
fix(pl)
fix(pl)
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
par(family='Arial',mfrow=c(2,2),xaxs='i',yaxs='i')
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
par(family='Arial',xaxs='i',yaxs='i')
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
par(family='Arial',xaxs='i',yaxs='i')
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3);
warnings()
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
fix(pl)
fix(pl)
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
fix(pl)
corr <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr.csv')
rcor <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_tlr_r.csv')
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
plot(x=corr0$aucs,y=corr0$CHG,xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
plot(x=corr0$aucs,y=corr0$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
View(rcor)
rcor0<-rcor[rcor$TRT01PN ==0,]
View(rcor0)
View(rcor0)
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3),')')
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==2,]$R),3))
lgd<-c(pr,sr);
lengend(1.4,0.35,lgd,ncol=1,bg='white')
legend(1.4,0.35,lgd,ncol=1,bg='white')
legend(1.35,0.35,lgd,ncol=1,bg='white')
legend(1.35,0.4,lgd,ncol=1,bg='white')
plot(x=corr0$aucs,y=corr0$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
rcor0<-rcor[rcor$TRT01PN ==0,]
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==2,]$R),3))
lgd<-c(pr,sr);
legend(1.35,0.4,lgd,ncol=1,bg='white')
legend(1.3,0.4,lgd,ncol=1,bg='white')
plot(x=corr0$aucs,y=corr0$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
rcor0<-rcor[rcor$TRT01PN ==0,]
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==2,]$R),3))
lgd<-c(pr,sr);
legend(1.3,0.4,lgd,ncol=1,bg='white')
legend(1.32,0.4,lgd,ncol=1,bg='white')
legend(1.33,0.4,lgd,ncol=1,bg='white')
legend(1.34,0.4,lgd,ncol=1,bg='white')
legend(1.345,0.4,lgd,ncol=1,bg='white')
plot(x=corr0$aucs,y=corr0$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
rcor0<-rcor[rcor$TRT01PN ==0,]
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==2,]$R),3))
lgd<-c(pr,sr);
legend(1.345,0.4,lgd,ncol=1,bg='white')
legend(1.345,0.42,lgd,ncol=1,bg='white')
legend(1.345,0.43,lgd,ncol=1,bg='white')
legend(1.345,0.435,lgd,ncol=1,bg='white')
legend(1.345,0.436,lgd,ncol=1,bg='white')
plot(x=corr0$aucs,y=corr0$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corr0,span=1,degree=1),se=TRUE)
lines(corr0$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corr0$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corr0$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
rcor0<-rcor[rcor$TRT01PN ==0,]
pr<-paste('Pearson ',round(as.numeric(rcor0[rcor0$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcor0[rcor0$type==2,]$R),3))
lgd<-c(pr,sr);
legend(1.345,0.436,lgd,ncol=1,bg='white')
corrt<-corr0
plot(x=corrt$aucs,y=corrt$CHG,pch=15,col='blue',xlab="AIGG AUC(W26-W104)",ylab="CHG in GCA at W104",xlim=c(0,1.8),ylim=c(-0.5,0.4))
pl<-predict(loess(CHG~aucs,corrt,span=1,degree=1),se=TRUE)
lines(corrt$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
lines(corrt$aucs,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE);
lines(corrt$aucs,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE);
rcort<-rcor[rcor$TRT01PN ==0,]
pr<-paste('Pearson ',round(as.numeric(rcort[rcort$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcort[rcort$type==2,]$R),3))
lgd<-c(pr,sr);
legend(1.345,0.436,lgd,ncol=1,bg='white')
lines(corrt$aucs,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE);
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
?legend
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
source('Q:/Projects/ACC001/2001/Final/figure/validation/program/qc_f_corr_tlr.R')
corr<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_petgca_base_petgca_chg104.csv", header=TRUE)
rcor<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_petgca_base_petgca_chg104_r.csv", header=TRUE)
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
windowsFonts(Times=windowsFont('TT Times New Roman'))
win.metafile(filename="Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_petgca_base_petgca_chg104_placebo.emf",width=7.5,height=9)
par(family='Times',xaxs='i',yaxs='i')
corrt<-corr0
rcort<-rcor[rcor$TRT01PN ==0,]
plot(x=corrt$XV,y=corrt$YV,pch=15,col='blue',xlab='Baseline GCA',ylab='GCA CHG at W104',xlim=c(1,2.8),ylim=c(-0.5,0.4))
pl<-predict(loess(YV~XV,corrt,span=1,degree=1),se=TRUE)
lines(corrt$XV,y=pl$fit,col=2,lty=1,lwd=2,xpd=FALSE)
lines(corrt$XV,y=pl$fit+pl$se,col=2,lty=3,xpd=FALSE)
lines(corrt$XV,y=pl$fit-pl$se,col=2,lty=3,xpd=FALSE)
pr<-paste('Pearson ',round(as.numeric(rcort[rcort$type==1,]$R),3))
sr<-paste('Spearman ',round(as.numeric(rcort[rcort$type==2,]$R),3))
lgd<-c(pr,sr)
legend(1.3,0.4,lgd,ncol=1,bg='white',bty='n')
dev.off()
par(family='Times',xaxs='i',yaxs='i')
corrt<-corr0
plot(x=corrt$XV,y=corrt$YV,pch=15,col='blue',xlab='Baseline GCA',ylab='GCA CHG at W104',xlim=c(1,2.8),ylim=c(-0.5,0.4))
View(corrt)
plot(x=corrt$XV,y=corrt$YV,pch=15,col='blue',xlab='Baseline GCA',ylab='GCA CHG at W104',xlim=c(1,2.8),ylim=c(-0.5,0.4))
View(corrt)
pl<-predict(loess(YV~XV,corrt,span=1,degree=1),se=TRUE)
View(rcort)
pr<-paste('Pearson ',round(as.numeric(rcort[rcort$type==1,]$R),3))
corr<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_petgca_base_petgca_chg104.csv", header=TRUE)
rcor<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_corr_petgca_base_petgca_chg104_r.csv", header=TRUE)
corr0 <- corr[corr$TRT01PN == 0, ]
corr1 <- corr[corr$TRT01PN == 1, ]
corr2 <- corr[corr$TRT01PN == 2, ]
corr3 <- corr[corr$TRT01PN == 3, ]
corr4 <- corr[corr$TRT01PN == 4, ]
par(family='Times',xaxs='i',yaxs='i')
corrt<-corr0
rcort<-rcor[rcor$TRT01PN ==0,]
plot(x=corrt$XV,y=corrt$YV,pch=15,col='blue',xlab='Baseline GCA',ylab='GCA CHG at W104',xlim=c(1,2.8),ylim=c(-0.5,0.4))
plot(x=corrt$XV,y=corrt$YV,pch=15,col='blue',xlab='Baseline GCA',ylab='GCA CHG at W104',xlim=c(1,2.8),ylim=c(-0.5,0.4))
View(corr0)
par(family='Arial',xaxs='i',yaxs='i')
library(survival)
tte <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_km_aigg.csv')
plot(survfit(Surv(ADY, 1-CENSOR)~TRT01PN, data = tte),col=c(1,2,3),xaxt='n',xlim=c(0,7*56))
lgd<-c('Placebo','3ug','10ug')
lengend(50*7,0.8,lgd,col=c(1,2,3))
legend(50*7,0.8,lgd,col=c(1,2,3))
?legend
legend(25*7,0.8,lgd,col=c(1,2,3))
legend(25*7,0.8,lgd,col=c(1,2,3),lty=1)
?xyplot
??xyplot
library(lattice)
library('lattice')
?xyplot
library(lattice)
library('lattice')
data<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_spplot_aigg.csv", header=TRUE)
visit <- c(0,104)
par(family='Arial')
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',log=10,equispaced.log=FALSE,ylim=c(0,100000)),
alternating = 1
)
)
?xyplot
View(data)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',log=10,equispaced.log=FALSE),ylim=c(0,100000),
alternating = 1
)
)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',log=10,equispaced.log=FALSE,at=c(0,10,100,1000,10000,100000)),ylim=c(0,100000),
alternating = 1
)
)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',at=c(0,10,100,1000,10000,100000)),ylim=c(0,100000),
alternating = 1
)
)
data<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_spplot_aigg.csv", header=TRUE)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',at=c(0,10,100,1000,10000,100000)),ylim=c(0,100000),
alternating = 1
)
)
library('lattice')
data<-read.csv("Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_spplot_aigg.csv", header=TRUE)
visit <- c(0,104)
yt<-c(0,10,100,1000,10000,100000)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',labels=as.character(yt),at=yt),ylim=c(0,100000),
alternating = 1
)
)
xyplot(AVAL ~ AVISITN | TRT01PN,
data = data,
groups = USUBJID,
type = 'l',
layout = c(3,1),
ylab = as.character(data$PARAMCD[1]),
scales = list(x = list(labels = as.character(visit), at = visit),
y = list(relation = 'same',labels=as.character(yt),at=yt),
alternating = 1
)
)
fix(yt)
fix(yt)
?log
library(survival)
library(survival)
tte <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_km_disp.csv')
library('survival')
tte <- read.csv('Q:/Projects/ACC001/2001/final/figure/validation/program/qc_f_km_disp.csv')
plot(survfit(Surv(ADY, 1-CENSOR)~TRT01PN, data = tte),col=c(1,2,3),xaxt='n',xlim=c(0,7*12*10))
formals(mean)
mean()
mean
tail
??tail
?tail
?numeric
??colmeans
install.packages("devtools")
library(devtools)
find_rtools()
library(KernSmooth)
?download.file
install.packages('xlsx')
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type='source')
install.packages("RMySQL",type='source')
install.packages("RMySQL",type='source')
install.packages("RMySQL",type='source')
Sys.getenv('MYSQL_HOME')
install.packages("RMySQL",type='source')
yum search mysql
library(DBI)
install.packages("RMySQL",type='source')
library("tools", lib.loc="C:/sli126/Program Files/R/R-3.0.2/library")
library("compiler", lib.loc="C:/sli126/Program Files/R/R-3.0.2/library")
install.packages("RMySQL",type='source')
install.packages("C:/Users/sli126/Downloads/RMySQL_0.8-0.tar.gz", repos = NULL, type = "source")
?read.xport
??read.xport
install.packages("foreign")
?read.xport
library(foreign)
?read.xport
?read.ssd
read.xport
setwd("~/GitHub/Datagetclean")
#read in features to labels the data set with descriptive variable names.
features<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/features.txt",stringsAsFactors=FALSE)
# read in datasets and add subject id and activity id to the dataset
x_test<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/test/X_test.txt")
y_test<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/test/y_test.txt")
subject_test<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/test/subject_test.txt")
test<-cbind(subject_test,y_test,x_test)
colnames(test)<-c("subjid","actid",features[,2])
x_train<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/train/X_train.txt")
y_train<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/train/y_train.txt")
subject_train<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/train/subject_train.txt")
train<-cbind(subject_train,y_train,x_train)
colnames(train)<-c("subjid","actid",features[,2])
#read in activity name
activity<-read.table("~/GitHub/Datagetclean/UCI HAR Dataset/activity_labels.txt")
colnames(activity)<-c("actid","actname")
#Merges the training and the test sets to create one data set.
data<-rbind(train,test)
#Extracts only the measurements on the mean and standard deviation for
#each measurement.
#split colnames by hyphen -
cnames<-strsplit(colnames(data),'-')
#a function to scan the colnames of dataframe,
#return the column number of the column which match the rule:
# second part of the colname is mean() or std(), Or subjid or actid
cnamemarch<-function(x){x[2]=="mean()"| x[2]=="std()" | x[1]=="subjid" | x[1]=="actid"}
#get the column number
m<-which(sapply(cnames,cnamemarch))
#extracts these columns
final<-data[,m]
#Uses descriptive activity names to name the activities in the data set
#merge activity names into dataset.
#I don't change it as row name since it's not necessary
final1<-merge(activity,final,by="actid")
#remove objects will not be used again.
remove(m,final,activity,cnames,data,train,test,x_test,x_train,y_test,y_train,subject_test,subject_train,features)
#Creates a second, independent tidy data set with the average of
#each variable for each activity and each subject.
library(reshape2)
temp<-melt(final1,id.vars=c("actid","actname","subjid"))
?dcast2
final2<-dcast(temp, actid+actname+subjid+variable~value,mean)
debug(dcast)
final2<-dcast(temp, actid+actname+subjid+variable~value,mean)
final2<-dcast(temp, actid+subjid+variable~value,mean)
exit()
View(final1)
??write
write.table(final1,file="UCIHARDATA.txt")
?dcast
final2<-dcast(temp, actid+subjid+variable~value,mean)
final2<-dcast(temp, actid+subjid+variable~value,mean)
a<-tapply(temp$value,c("actid","actname","subjid","variable"),mean)
?tapply
a<-tapply(temp$value,list("actid","actname","subjid","variable"),mean)
a<-tapply(temp$value,list(temp$actid,temp$actname,temp$subjid,temp$variable),mean)
head(a)
a<-tapply(temp$value,list(temp$actid,temp$actname,temp$subjid,temp$variable),mean,simplify=TRUE)
a
final2<-dcast(temp, actid+subjid+variable~value,mean)
final2<-dcast(temp, actid+subjid+variable~value,mean)
final2<-dcast(temp, subjid+actid+variable~value,mean)
final2<-dcast(temp, subjid+actid~variable,value.var="value",mean)
View(data)
View(final2)
final2<-dcast(temp, subjid+actid+actname~variable,value.var="value",mean)
View(final2)
debug()
debug(dcast)
final2<-dcast(temp, subjid+actid+actname~variable,value.var="value",mean)
write.table(final2,file="UCIHARDATA-AVE.txt")
